const { test, expect } = require('@playwright/test');

test.describe('Contact Form Tests (Local Server)', () => {
  const LOCAL_URL = 'http://localhost:8000';
  
  test.beforeEach(async ({ page }) => {
    await page.goto(LOCAL_URL);
  });

  test('should load website from local server', async ({ page }) => {
    // Check if the page loads from local server
    await expect(page).toHaveTitle('Yifan Yu');
    console.log('✅ Website loaded successfully from local server at http://localhost:8000');
  });

  test('should navigate to contact section and test form', async ({ page }) => {
    // Scroll to contact section directly
    await page.locator('#contact').scrollIntoViewIfNeeded();
    
    // Check if contact section is visible
    await expect(page.locator('#contact')).toBeVisible();
    await expect(page.locator('#contact h2')).toContainText('Contact');
    
    console.log('✅ Contact section is visible');
  });

  test('should test contact form fields and structure', async ({ page }) => {
    // Navigate to contact section
    await page.locator('#contact').scrollIntoViewIfNeeded();
    
    // Check form presence
    await expect(page.locator('#contactForm')).toBeVisible();
    
    // Check required form fields
    await expect(page.locator('#contactForm input[name="name"]')).toBeVisible();
    await expect(page.locator('#contactForm input[name="email"]')).toBeVisible();
    await expect(page.locator('#contactForm input[name="user_subject"]')).toBeVisible();
    await expect(page.locator('#contactForm textarea[name="message"]')).toBeVisible();
    
    // Check submit button
    await expect(page.locator('#contactForm button[type="submit"]')).toBeVisible();
    await expect(page.locator('#contactForm button[type="submit"]')).toContainText('Send Message');
    
    console.log('✅ All contact form fields are present and visible');
  });

  test('should validate Web3Forms configuration', async ({ page }) => {
    // Navigate to contact section
    await page.locator('#contact').scrollIntoViewIfNeeded();
    
    // Check Web3Forms hidden fields exist
    const accessKeyInput = page.locator('input[name="access_key"]');
    const subjectInput = page.locator('input[name="subject"]');
    const fromNameInput = page.locator('input[name="from_name"]');
    
    await expect(accessKeyInput).toBeAttached();
    await expect(subjectInput).toBeAttached();
    await expect(fromNameInput).toBeAttached();
    
    // Check form action and method
    const form = page.locator('#contactForm');
    await expect(form).toHaveAttribute('action', 'https://api.web3forms.com/submit');
    await expect(form).toHaveAttribute('method', 'POST');
    
    // Get the access key value
    const accessKey = await accessKeyInput.getAttribute('value');
    console.log(`✅ Web3Forms access key configured: ${accessKey}`);
    
    // Validate access key format (should be UUID format)
    expect(accessKey).toMatch(/^[a-f0-9\-]{36}$/);
    
    console.log('✅ Web3Forms configuration is valid');
  });

  test('should fill contact form with test data', async ({ page }) => {
    // Navigate to contact section
    await page.locator('#contact').scrollIntoViewIfNeeded();
    
    // Fill out the form with test data
    await page.fill('#contactForm input[name="name"]', 'Playwright Test User');
    await page.fill('#contactForm input[name="email"]', 'test@example.com');
    await page.fill('#contactForm input[name="user_subject"]', 'Test Subject from Playwright');
    await page.fill('#contactForm textarea[name="message"]', 'This is a test message to verify the contact form is working properly. This message was automatically generated by Playwright testing.');
    
    // Verify the fields are filled
    await expect(page.locator('#contactForm input[name="name"]')).toHaveValue('Playwright Test User');
    await expect(page.locator('#contactForm input[name="email"]')).toHaveValue('test@example.com');
    await expect(page.locator('#contactForm input[name="user_subject"]')).toHaveValue('Test Subject from Playwright');
    
    console.log('✅ Contact form filled with test data successfully');
    console.log('ℹ️ Form is ready for submission (test stopped here to avoid sending actual emails)');
  });

  test('should test actual form submission', async ({ page }) => {
    // Navigate to contact section
    await page.locator('#contact').scrollIntoViewIfNeeded();
    
    // Fill out the form with test data
    await page.fill('#contactForm input[name="name"]', 'Playwright Automated Test');
    await page.fill('#contactForm input[name="email"]', 'playwright.test@example.com');
    await page.fill('#contactForm input[name="user_subject"]', 'Automated Testing - Contact Form Verification');
    await page.fill('#contactForm textarea[name="message"]', 'This email was sent automatically by Playwright testing framework to verify that the contact form on the Jason Resume website is functioning correctly. Please ignore this test message.');
    
    console.log('✅ Form filled with test data');
    
    // Monitor the form submission
    try {
      // Listen for the form submission
      const [response] = await Promise.all([
        page.waitForResponse('https://api.web3forms.com/submit'),
        page.click('#contactForm button[type="submit"]')
      ]);
      
      console.log(`📤 Form submission sent, response status: ${response.status()}`);
      
      if (response.status() === 200) {
        const responseBody = await response.json();
        console.log('📋 Response body:', responseBody);
        
        if (responseBody.success) {
          console.log('✅ Contact form submission successful!');
          console.log('📧 Test email should be delivered to: a0405142777@gmail.com');
        } else {
          console.log('❌ Contact form submission failed:', responseBody.message);
        }
      } else {
        console.log(`❌ HTTP error: ${response.status()}`);
      }
      
    } catch (error) {
      console.log('⚠️ Form submission test error:', error.message);
    }
  });

  test('should test form validation', async ({ page }) => {
    // Navigate to contact section
    await page.locator('#contact').scrollIntoViewIfNeeded();
    
    // Try to submit empty form
    await page.click('#contactForm button[type="submit"]');
    
    // Check that required fields prevent submission
    const nameField = page.locator('#contactForm input[name="name"]');
    const emailField = page.locator('#contactForm input[name="email"]');
    const subjectField = page.locator('#contactForm input[name="user_subject"]');
    const messageField = page.locator('#contactForm textarea[name="message"]');
    
    // Verify required attributes
    await expect(nameField).toHaveAttribute('required');
    await expect(emailField).toHaveAttribute('required');
    await expect(subjectField).toHaveAttribute('required');
    await expect(messageField).toHaveAttribute('required');
    
    console.log('✅ Form validation attributes are correctly set');
  });
});